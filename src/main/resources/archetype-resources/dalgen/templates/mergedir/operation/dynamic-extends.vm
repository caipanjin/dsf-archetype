#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
 ${symbol_pound}${symbol_pound}该vm用于后续的动态扩展 ${symbol_pound}${symbol_pound}//查询返回值       ${symbol_pound}${symbol_pound}temp = (${symbol_dollar}{operation.simpleReturnType}) getSqlMapClientTemplate().queryForObject("${symbol_dollar}{operation.mappedStatementId}", ${symbol_dollar}{paramName});	  ${symbol_pound}${symbol_pound}//将机密后的字段放入查询时做了保护性的字段${symbol_pound}${symbol_pound}此处需要判断下做保护性字段的数据类型         ${symbol_pound}${symbol_pound}String methodName = "set${symbol_dollar}!{finalRet}";		 ${symbol_pound}${symbol_pound}Method[] methods = ${symbol_dollar}{table.getQualifiedDOClassName()}.class.getMethods();		 ${symbol_pound}${symbol_pound}Method realMethod = null;		 ${symbol_pound}${symbol_pound}for(Method m:methods) {		     ${symbol_pound}${symbol_pound}if(m.getName().equals(methodName)){        		  ${symbol_pound}${symbol_pound}realMethod=m;        		  ${symbol_pound}${symbol_pound}break;        	  ${symbol_pound}${symbol_pound}}		${symbol_pound}${symbol_pound} }		 ${symbol_pound}${symbol_pound}try {			${symbol_pound}${symbol_pound}realMethod.invoke(opDO,temp.get${symbol_dollar}!{finalRet}());		${symbol_pound}${symbol_pound}} catch (IllegalArgumentException e) {		       ${symbol_pound}${symbol_pound}logger.warn("error");		${symbol_pound}${symbol_pound}} catch (IllegalAccessException e) {			${symbol_pound}${symbol_pound}logger.warn("error");		${symbol_pound}${symbol_pound}} catch (InvocationTargetException e) {			${symbol_pound}${symbol_pound}logger.warn("error");		${symbol_pound}${symbol_pound}}                   ${symbol_pound}${symbol_pound}return temp