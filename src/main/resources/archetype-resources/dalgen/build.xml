#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
﻿<?xml version="1.0" encoding="UTF-8"?>

<project name="dalgen" default="release" basedir=".">
	<!-- define properties -->
	<property environment="env" /> 
	<property name="name" value="bcdc-dalgen" />

	<loadproperties srcFile="db.properties" />

	<!-- properties for directory -->
	<property name="dir.conf" value="${symbol_dollar}{user.home}/.middlegen/conf" />
	<!--property name="dir.lib" value="${symbol_dollar}{user.home}/.middlegen/lib" /-->
	<property name="dir.lib" value="${symbol_dollar}{basedir}/lib" />
	<echo message="dir.lib=${symbol_dollar}{dir.lib}"/>
	<property name="dir.target" value="${symbol_dollar}{basedir}/target" />
	<property name="dir.deploy" value="${symbol_dollar}{basedir}/../app/common/dal/src/main" />

	<!-- properties for middlegen plugin -->
	<property name="middlegen.templates" value="templates" />
	<property name="middlegen.destination" value="${symbol_dollar}{dir.deploy}" />
	<property name="middlegen.config.file" value="${symbol_dollar}{basedir}/dal-config.xml" />
	<property name="middlegen.package" value="${package}.common.dal" />
	<property name="middlegen.package.dir" value="${packageInPathFormat}/common/dal" />

	<!-- insert database configuration here -->
	<property name="database.driver.file" value="${symbol_dollar}{dir.lib}/ojdbc14.jar" />
	<!--property name="database.driver.file" value="${symbol_dollar}{dir.lib}/mysql-jdbc-5.0.4.jar" /-->
	
	<property name="database.driver.classpath" value="${symbol_dollar}{database.driver.file}" />
	<property name="database.driver" value="oracle.jdbc.driver.OracleDriver" />
	<!--property name="database.driver" value="com.mysql.jdbc.Driver" /-->
	<!-- classpath -->
	<path id="classpath.main">
		<pathelement path="${symbol_dollar}{dir.conf}" />
		<fileset dir="${symbol_dollar}{dir.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- compile middlegen plugin -->
	<target name="compile" depends="" description="">
		
		<mkdir dir="${symbol_dollar}{dir.conf}" />
		<!--copy todir="${symbol_dollar}{dir.lib}">
			<fileset dir="${symbol_dollar}{user.home}/lib">
				<include name="**/*.jar" />
				<exclude name="**/*src.jar" />
				<exclude name="**/*doc.jar" />
			</fileset>
		</copy-->
		<unjar src="${symbol_dollar}{dir.lib}/pinganfu-tools-dalgen-0.0.1.jar" dest="${symbol_dollar}{dir.conf}" />
		<copy file="${symbol_dollar}{dir.conf}/middlegen-plugin.xml" todir="${symbol_dollar}{dir.conf}/META-INF" />
	</target>

	<!-- sanity check (database driver must be available) -->
	<target name="check-driver-present">
		<available file="${symbol_dollar}{database.driver.file}" type="file" property="driver.present" />
	</target>
	<target name="panic-if-driver-not-present" unless="driver.present">
		<fail>
        JDBC驱动程序"${symbol_dollar}{database.driver.file}"不存在。
        </fail>
	</target>

	<!-- =================================================================== -->
	<!-- Run Middlegen                                                       -->
	<!-- =================================================================== -->
	<target name="middlegen" depends="compile,check-driver-present,panic-if-driver-not-present" description="">

		<taskdef name="middlegen" classname="middlegen.MiddlegenTask" classpathref="classpath.main" />
		<echo message="" />
		<input message="正在生成BCDC-DAL，请输入目标表名,多表以逗号分隔,全表生成请输入'*',只生成Sequence请输入'seq': " addproperty="tabs" />

		<echo message="BCDC-DAL配置文件：${symbol_dollar}{middlegen.config.file}." />
		<echo message="开始自动生成BCDC-DAL..." />

		<mkdir dir="${symbol_dollar}{middlegen.destination}" />
		<middlegen configfile="${symbol_dollar}{middlegen.config.file}" runModel="SOFA" tabs="${symbol_dollar}{tabs}" appname="${symbol_dollar}{name}" databaseurl="${symbol_dollar}{database.url}" driver="${symbol_dollar}{database.driver}" username="${symbol_dollar}{database.userid}" password="${symbol_dollar}{database.password}" schema="${symbol_dollar}{database.schema}" prefsdir="${symbol_dollar}{dir.target}">

			<iwallet destination="" mergedir="${symbol_dollar}{middlegen.templates}/mergedir" package="${symbol_dollar}{middlegen.package}">
				<!-- 生成数据对象(DataObject)基类 -->
				<!-- <fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/base-do.vm" filename="dataobject/BaseDO.java" /> -->

				<!-- 为每一张表生成一个数据对象类 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/do.vm" filename="dataobject/{0}DO.java" />

				<!-- 为每一张表生成一个DAO接口 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/dao.vm" filename="daointerface/{0}DAO.java" />

				<!-- 为每一张表生成ibatis DAO实现 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/ibatis.vm" filename="ibatis/Ibatis{0}DAO.java" />

				<!-- 生成访问sequence表的DAO接口 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/seq-dao.vm" filename="daointerface/SeqDAO.java" />

				<!-- 生成SequenceDAO的Ibatis实现 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/java/${symbol_dollar}{middlegen.package.dir}" template="${symbol_dollar}{middlegen.templates}/seq-ibatis.vm" filename="ibatis/IbatisSeqDAO.java" />

				<!-- 为每一张表生成一个sqlmapping文件 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/resources" template="${symbol_dollar}{middlegen.templates}/table-sqlmap-mapping.vm" filename="sqlmap/{0}-sqlmap-mapping.xml" />

				<!-- 生成公共的sqlmapping文件 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/resources" template="${symbol_dollar}{middlegen.templates}/bcdc-common-sqlmap-mapping.vm" filename="sqlmap/bcdc-common-sqlmap-mapping.xml" />

				<!-- 生成ibatis的配置文件 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/resources" template="${symbol_dollar}{middlegen.templates}/sqlmap.vm" filename="sqlmap/bcdc-sqlmap.xml" />

				<!-- 生成DAO beans的Spring配置文件 -->
				<fileproducer destination="${symbol_dollar}{middlegen.destination}/resources/META-INF/spring" template="${symbol_dollar}{middlegen.templates}/beans-dal-dao.vm" filename="bcdc-common-dal-dao.xml" />
			</iwallet>
		</middlegen>
		<echo message="BCDC DAL生成已成功!" />
	</target>

    <!-- 如果target目录不存在，会中断build，换成basedir一定存在的 -->
	<target name="clean-perf" depends="" description="">
	   <delete>
          <fileset dir="${symbol_dollar}{user.home}">
              <include name="${symbol_dollar}{dir.target}/*.properties" />
          </fileset>
     </delete>	    
	</target>

	<target name="clean-middlegen" depends="" description="">
		<delete dir="${symbol_dollar}{user.home}/.middlegen/lib" />
		<delete dir="${symbol_dollar}{user.home}/.middlegen/conf" />
	</target>

	<target name="clean" depends="clean-perf,clean-middlegen" description="clean all generated stuff" />

	<!-- The default target to use -->
	<target name="release" depends="clean,middlegen" description="" />
</project>
